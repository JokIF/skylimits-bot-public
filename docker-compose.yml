services:
  app:
    build:
      context: .
    restart: always
    depends_on:
      - postgresql
      - redis
    networks:
      - to-db-net
    ports:
      - 8000:80
    command: python3 -O -m core start
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      POSTGRESQL_USER: ${POSTGRESQL_USER}
      POSTGRESQL_DB: ${POSTGRESQL_DB}
      POSTGRESQL_HOST: ${POSTGRESQL_HOST}
      POSTGRESQL_PORT: ${POSTGRESQL_PORT}
      POSTGRESQL_PASSWORD: ${POSTGRESQL_PASSWORD}
      BOT_TOKEN: ${BOT_TOKEN}
  postgresql:
    hostname: ${POSTGRESQL_HOST}
    image: postgres:15-alpine
    restart: always
    volumes:
      - data-postgresql:/var/lib/postgresql/data
    networks:
      - to-db-net
    ports:
      - ${POSTGRESQL_PORT}:5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_DB: ${POSTGRESQL_DB}
      PGDATA: "/var/lib/postgresql/data/pgdata"
  redis:
    image: redis:7-alpine
    container_name: ${REDIS_HOST}
    restart: always
    volumes:
      - data-redis:/data
    command:
      - "--requirepass"
      - "${REDIS_PASSWORD}"
    networks:
      - to-db-net
    ports:
      - ${REDIS_PORT}:6397
  
volumes:
  data-postgresql:
  data-redis:

networks:
  to-db-net:
    driver: bridge